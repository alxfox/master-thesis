# this model makes use of both pretrained camera and LiDAR weights.
# as the LiDAR checkpoint is loaded last, overlapping weights (i.e. the decoder and head) are loaded from the LiDAR checkpoint
find_unused_parameters: true

model:
  freeze_state:
    camera: true
    lidar: true
  # loss_depth_weight: 3.0 # no need since camera is frozen
  encoders:
    camera:
      vtransform:
        depthnet_cfg:
          use_dcn: false
          aspp_mid_channels: 96
        type: BEVDepthLSSTransform
        image_size: ${image_size}
        in_channels: 256
        out_channels: 80
        feature_size: ${[image_size[0] // 8, image_size[1] // 8]}
        zbound: [-10.0, 10.0, 20.0]
        dbound: ${depth_bound}
        downsample: 2
blackout:
  lidar: 0.2
  camera: 0.2
load_from: ["data/runs/centerhead_camera_depthnet_giga/run-6e3e476f-aa43dc60/epoch_20.pth", "data/runs/centerhead_lidar_baseline_giga/run-6e3e476f-bc212d47/epoch_20.pth"]
